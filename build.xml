<project name="EnderIO" default="main">
    <property environment="env"/>
    <!-- Properties -->

    <property name="build.dir" value="build"/>
    <property name="src.dir" value="."/>
    <property name="resources.dir" value="resources"/>
    <property name="lib.dir" value="lib"/>

    <property name="download.dir" value="download"/>

    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir" value="bin"/>

    <property name="forge.dir" value="${build.dir}/forge"/>
    <property name="mcp.dir" value="${forge.dir}/mcp"/>

    <property name="mcpsrc.dir" value="${mcp.dir}/src"/>

    <property name="mc.version" value="1.5.2"/>
    <property name="forge.version" value="7.8.1.738"/>
    <property name="project.version" value="0.3.6"/>

    <property name="forge.name" value="forge-${mc.version}-${forge.version}-src.zip"/>

    <available property="forge-exists" file="${download.dir}/${forge.name}"/>

    <condition property="out-of-date">
        <not>
            <and>
                <available file="${download.dir}/${forge.name}"/>
                <available file="${mcpsrc.dir}"/>
            </and>
        </not>
    </condition>

    <mkdir dir="${download.dir}"/>

    <!-- Targets -->

    <!-- Clear build directory -->
    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <!-- Set full version -->
    <target name="initialize-version" depends="version-provided,version-not-provided">
        <property name="project.version.full" value="${project.version}.${build.number}"/>
    </target>

    <!-- Set unknown build number -->
    <target name="version-not-provided" unless="env.BUILD_NUMBER">
        <!-- property name="build.number" value="unknown"/ -->
        <property name="build.number" value="0"/>
    </target>

    <!-- Set build number from environment -->
    <target name="version-provided" if="env.BUILD_NUMBER">
        <property name="build.number" value="${env.BUILD_NUMBER}"/>
    </target>

    <!-- Download necessary files -->
    <target name="download-files" depends="download-forge"/>

    <!-- Download forge (if it doesn't exist) -->
    <target name="download-forge" unless="forge-exists">
        <get src="http://files.minecraftforge.net/maven/net/minecraftforge/forge/${mc.version}-${forge.version}/${forge.name}" dest="${download.dir}" usetimestamp="True"/>
    </target>

    <!-- Setup mcp and forge -->
    <target name="setup" depends="download-files" if="out-of-date">
        <delete dir="${forge.dir}" failonerror="false"/>

        <unzip dest="${forge.dir}/.." src="${download.dir}/${forge.name}"/>

        <!-- Fix executable permissions -->
        <chmod dir="${forge.dir}" perm="ugo+rx" includes="**.sh"/>

        <!-- Install forge -->
        <exec dir="${forge.dir}" executable="cmd" osfamily="windows">
            <arg line="/c install.cmd"/>
        </exec>

        <exec dir="${forge.dir}" executable="sh" osfamily="unix">
            <arg value="install.sh"/>
        </exec>
    </target>

    <target name="compile" depends="initialize-version,setup">
        <delete dir="${classes.dir}"/>
        <mkdir dir="${classes.dir}"/>

        <!-- Copy sources -->
        <copy todir="${mcpsrc.dir}/minecraft">
            <fileset dir="${src.dir}/common"/>
            <filterset>
                <filter token="VERSION" value="${project.version.full}" />
                <filter token="BUILD_NUMBER" value="${build.number}" />
            </filterset>
        </copy>

        <unzip dest="${mcpsrc.dir}/minecraft" src="${src.dir}/lib/neiDummyInterface-src.zip"/>

        <copy todir="${mcp.dir}/lib">
            <fileset dir="${src.dir}/lib"/>
        </copy>

        <delete file="${mcp.dir}/lib/neiDummyInterface.jar"/>
        <delete file="${mcp.dir}/lib/neiDummyInterface-src.zip"/>

        <!-- Recompile -->
        <exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
            <arg line="/c recompile.bat"/>
        </exec>

        <exec dir="${mcp.dir}" executable="sh" osfamily="unix">
            <arg value="recompile.sh"/>
        </exec>

        <!-- Check for failure -->
        <fail message="MCP failed to build">
            <condition>
                <resourcecontains resource="${mcp.dir}/logs/client_compile.log" substring="error:"/>
            </condition>
        </fail>

        <!-- Reobfuscate -->
        <exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
            <arg line="/c reobfuscate.bat"/>
        </exec>

        <exec dir="${mcp.dir}" executable="sh" osfamily="unix">
            <arg value="reobfuscate.sh"/>
        </exec>

        <!-- Copy classes -->
        <copy todir="${classes.dir}">
            <fileset dir="${mcp.dir}/reobf/minecraft"/>
        </copy>

        <!-- Copy resources -->
        <copy todir="${classes.dir}">
            <fileset dir="${resources.dir}">
                <exclude name="build.xml"/>
                <exclude name="**/*.pdn"/>
            </fileset>
        </copy>

        <!-- Reset src dir to post-forge-install state -->
        <delete dir="${mcpsrc.dir}/minecraft/crazypants"/>
    </target>

    <!-- Package the compiled files -->
    <target name="package" depends="compile">
        <delete dir="${jar.dir}"/>
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}-${mc.version}-${project.version.full}.jar" basedir="${classes.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}-${mc.version}-${project.version.full}.jar">
            <fileset dir="${classes.dir}" includes="crazypants/, buildcraft/"/>
            <zipfileset includes="**/*.class" src="${lib.dir}/cglib-nodep-2.2.3.jar"/>
            <fileset dir="${resources.dir}">
                <exclude name="build.xml"/>
                <exclude name="**/*.pdn"/>
            </fileset>
        </jar>
    </target>

    <!-- Default target to run -->
    <target name="main" depends="package"/>
</project>
